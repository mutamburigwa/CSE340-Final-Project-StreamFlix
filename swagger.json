{
  "swagger": "2.0",
  "info": {
    "title": "StreamFlix API",
    "description": "API for a movie web app with role-based access control.",
    "version": "1.3.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a user or admin",
        "description": "Authenticates a user or admin and returns a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful. Returns a JWT token.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string"
                },
                "expiresIn": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input."
          },
          "401": {
            "description": "Unauthorized - Invalid credentials."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Allows anyone to create a new user with the provided details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad Request - Missing or invalid fields"
          },
          "409": {
            "description": "Conflict - Username already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Allows admins to retrieve a list of all users.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user information",
        "description": "Allows admins to update user details.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "username"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated successfully."
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "404": {
            "description": "User not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Allows admins to delete a user by ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully."
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/movies": {
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Create a new movie",
        "description": "Allows admins to create a new movie.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "releaseDate": {
                  "type": "string",
                  "format": "date"
                },
                "genre": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "director": {
                  "type": "string"
                },
                "cast": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "language": {
                  "type": "string"
                },
                "runtime": {
                  "type": "integer",
                  "description": "Runtime in minutes"
                },
                "thumbnail": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "description",
                "url",
                "releaseDate",
                "genre",
                "director",
                "cast",
                "language",
                "runtime",
                "thumbnail"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created successfully."
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get all movies",
        "description": "Accessible to all authenticated users.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>'."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of movies.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token missing or invalid."
          }
        }
      }
    },
    "/movies/{id}": {
      "put": {
        "tags": [
          "Movies"
        ],
        "summary": "Update a movie",
        "description": "Allows admins to update a movie's details.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the movie to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "description",
                "url",
                "thumbnail"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Movie updated successfully."
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "404": {
            "description": "Movie not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "summary": "Delete a movie",
        "description": "Allows admins to delete a movie by ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>' with admin role."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the movie to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Movie deleted successfully."
          },
          "401": {
            "description": "Unauthorized - Admin privileges required."
          },
          "404": {
            "description": "Movie not found."
          }
        }
      }
    },
    "/movies/recommendations": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get recommended movies",
        "description": "Provides movie recommendations for the user based on their watch history.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>'."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recommended movies.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/my-list": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get my list of saved movies",
        "description": "Retrieves the list of movies saved by the user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>'."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of movies in the user's personal list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "thumbnail": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token missing or invalid."
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Add movies to my list",
        "description": "Allows users to add a movie to their personal list.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT token in the format 'Bearer <token>'."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "movieId": {
                  "type": "string"
                }
              },
              "required": [
                "movieId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie added to your list successfully."
          },
          "400": {
            "description": "Invalid movie ID."
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token in the format 'Bearer <token>'."
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}